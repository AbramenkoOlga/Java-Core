package Homework1;

public interface CanJump {
    void jump(int height);
}

public interface CanRun {
    void run(int length);
}

public interface Competitable extends CanRun, CanJump{
}

public interface Overcomable {
    public void overcome(Competitable competitable);
}

public class Cat implements Competitable {
    private int jumpHeight;
    private int runLength;

    public Cat(int jumpHeight, int runLength) {
        this.jumpHeight = jumpHeight;
        this.runLength = runLength;
    }

    @Override
    public void jump(int height) {
        if (height > jumpHeight) {
            System.out.println("Я кот, я не смог перепрыгнуть!");
        } else {
            System.out.println("Я кот, я перепрыгнул!");
        }
    }

    @Override
    public void run(int length) {
        if (length > runLength) {
            System.out.println("Я кот, я не смог пробежать!");
        } else {
            System.out.println("Я кот, я пробежал!");
        }
    }
}

public class Human implements Competitable{
    private int jumpHeight;
    private int runLength;

    public Human(int jumpHeight, int runLength) {
        this.jumpHeight = jumpHeight;
        this.runLength = runLength;
    }

    @Override
    public void jump(int height) {
        if (height > jumpHeight) {
            System.out.println("Я человек, я не смог перепрыгнуть!");
        } else {
            System.out.println("Я человек, я перепрыгнул!");
        }
    }

    @Override
    public void run(int length) {
        if (length > runLength) {
            System.out.println("Я человек, я не смог пробежать!");
        } else {
            System.out.println("Я человек, я пробежал!");
        }
    }
}

public class Robot implements Competitable{
    private int jumpHeight;
    private int runLength;

    public Robot(int jumpHeight, int runLength) {
        this.jumpHeight = jumpHeight;
        this.runLength = runLength;
    }

    @Override
    public void jump(int height) {
        if (height > jumpHeight) {
            System.out.println("Я робот, я не смог перепрыгнуть!");
        } else {
            System.out.println("Я робот, я перепрыгнул!");
        }
    }

    @Override
    public void run(int length) {
        if (length > runLength) {
            System.out.println("Я робот, я не смог пробежать!");
        } else {
            System.out.println("Я робот, я пробежал!");
        }
    }
}

public class Treadmill implements Overcomable{
    private int length;

    public Treadmill(int length) {
        this.length = length;
    }

    public void overcome(Competitable competitable){
        competitable.run(length);
    }
}

public class Wall implements Overcomable {
    private int height;

    public Wall(int height) {
        this.height = height;
    }

    public void overcome(Competitable competitable) {
        competitable.jump(height);
    }
}

public class Main {
    public static void main(String[] args) {
        Competitable[] competitors = {new Cat(1, 2), new Robot(3, 4),
                new Human(5, 6)};
        Overcomable[] overcomables = {new Wall(1), new Treadmill(5)};

        for(Competitable competitable : competitors){
            for(Overcomable overcomable : overcomables){
                overcomable.overcome(competitable);
            }
        }
    }
}
